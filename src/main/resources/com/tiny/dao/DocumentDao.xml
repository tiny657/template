<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.tiny.dao.DocumentDao">
  <resultMap id="result" type="document">
    <result property="documentId" column="documentId"/>
    <result property="content" column="content"/>
    <result property="point" column="point"/>
    <result property="like" column="like"/>
    <result property="dislike" column="dislike"/>
    <result property="comment" column="comment"/>
    <result property="sharing" column="sharing"/>
    <result property="providerUserId" column="providerUserId"/>
    <result property="name" column="name"/>
    <result property="regDate" column="regDate"/>
  </resultMap>

  <insert id="save" parameterType="document">
    INSERT
    INTO document
    (`content`,
    `providerUserId`,
    `name`,
    `regDate`)
    VALUES (#{content},
    #{providerUserId},
    #{name},
    NOW());
  </insert>

  <select id="getAll" resultMap="result">
    SELECT *
    FROM `document`
    ORDER BY `documentId` DESC;
  </select>

  <select id="get" parameterType="int" resultType="document">
    SELECT *
    FROM `document`
    WHERE `documentId` = #{documentId};
  </select>

  <select id="getList" parameterType="map" resultMap="result">
    SELECT *
    FROM `document`
    WHERE `documentId` <![CDATA[<]]> #{documentId}
    ORDER BY `documentId` DESC
    LIMIT #{limit};
  </select>

  <select id="getRecently" parameterType="int" resultMap="result">
    SELECT *
    FROM `document`
    WHERE `documentId` <![CDATA[>]]> #{documentId}
    ORDER BY `documentId` DESC;
  </select>

  <select id="getProviderUserId" parameterType="int" resultType="String">
    SELECT providerUserId
    FROM `document`
    WHERE `documentId` = #{documentId};
  </select>

  <select id="getLast" resultType="document">
    SELECT *
    FROM `document`
    WHERE `documentId` = LAST_INSERT_ID();
  </select>

  <select id="count" resultType="int">
    SELECT COUNT(*)
    FROM `document`;
  </select>

  <select id="countDocForLast1Hour" parameterType="String" resultType="int">
    SELECT COUNT(*)
    FROM `document`
    WHERE `providerUserId` = #{providerUserId}
    AND `regDate` > DATE_ADD(NOW(), INTERVAL -1 HOUR);
  </select>

  <update id="update" parameterType="document">
    UPDATE `document`
    SET
    `content` = #{content},
    `regDate` = NOW()
    WHERE `documentId` = #{documentId};
  </update>

  <update id="increaseComment" parameterType="int">
    UPDATE `document`
    SET
    `comment` = `comment` + 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="decreaseComment" parameterType="int">
    UPDATE `document`
    SET
    `comment` = `comment` - 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="increaseLike" parameterType="int">
    UPDATE `document`
    SET
    `like` = `like` + 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="decreaseLike" parameterType="int">
    UPDATE `document`
    SET
    `like` = `like` - 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="increaseDislike" parameterType="int">
    UPDATE `document`
    SET
    `dislike` = `dislike` + 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="decreaseDislike" parameterType="int">
    UPDATE `document`
    SET
    `dislike` = `dislike` - 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="increaseSharing" parameterType="int">
    UPDATE `document`
    SET
    `sharing` = `sharing` + 1
    WHERE `documentId` = #{documentId};
  </update>

  <update id="decreaseSharing" parameterType="int">
    UPDATE `document`
    SET
    `sharing` = `sharing` - 1
    WHERE `documentId` = #{documentId};
  </update>

  <delete id="delete" parameterType="int">
    DELETE
    FROM `document`
    WHERE `documentId` = #{documentId};
  </delete>
</mapper>
